"""
Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator.
"""

import attr
from nipype.interfaces.base import (
    Directory,
    File,
    InputMultiPath,
    OutputMultiPath,
    traits,
)
from pydra import ShellCommandTask
from pydra.engine.specs import SpecInfo, ShellSpec


class CheckerBoardFilter:
    """
    title: CheckerBoard Filter
    category: Filtering
    description: Create a checkerboard volume of two volumes. The output volume will show the two inputs alternating according to the user supplied checkerPattern. This filter is often used to compare the results of image registration. Note that the second input is resampled to the same origin, spacing and direction before it is composed with the first input. The scalar type of the output volume will be the same as the input image scalar type.
    version: 0.1.0.$Revision$(alpha)
    documentation-url: http://wiki.slicer.org/slicerWiki/index.php/Documentation/Nightly/Modules/CheckerBoard
    contributor: Bill Lorensen (GE)
    acknowledgements: This work is part of the National Alliance for Medical Image Computing (NAMIC), funded by the National Institutes of Health through the NIH Roadmap for Medical Research, Grant U54 EB005149.
    """

    input_fields = [
        (
            "checkerPattern",
            attr.ib(
                type=InputMultiPath,
                metadata={
                    "argstr": "--checkerPattern %s",
                    "help_string": "The pattern of input 1 and input 2 in the output image. The user can specify the number of checkers in each dimension. A checkerPattern of 2,2,1 means that images will alternate in every other checker in the first two dimensions. The same pattern will be used in the 3rd dimension.",
                    "sep": ",",
                },
            ),
        ),
        (
            "inputVolume1",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "%s",
                    "help_string": "First Input volume",
                    "position": "-3",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputVolume2",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "%s",
                    "help_string": "Second Input volume",
                    "position": "-2",
                    "exists": "True",
                },
            ),
        ),
        (
            "outputVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "%s",
                    "help_string": "Output filtered",
                    "position": "-1",
                    "hash_files": "False",
                },
            ),
        ),
    ]
    output_fields = [
        (
            "outputVolume",
            attr.ib(
                type=File,
                metadata={
                    "help_string": "Output filtered",
                    "position": "-1",
                    "exists": "True",
                },
            ),
        )
    ]

    input_spec = SpecInfo(name="Input", fields=input_fields, bases=(ShellSpec,))
    output_spec = SpecInfo(name="Output", fields=output_fields, bases=(ShellSpec,))

    task = ShellCommandTask(
        name="CheckerBoardFilter",
        executable=" CheckerBoardFilter ",
        input_spec=input_spec,
        output_spec=output_spec,
    )
