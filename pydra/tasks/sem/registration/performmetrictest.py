"""
Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator.
"""

import attr
from nipype.interfaces.base import (
    Directory,
    File,
    InputMultiPath,
    OutputMultiPath,
    traits,
)
from pydra import ShellCommandTask
from pydra.engine.specs import SpecInfo, ShellSpec


class PerformMetricTest:
    """
    title: Metric Test
    category: Registration
    description: Compare Mattes/MSQ metric value for two input images and a possible input BSpline transform.
    version: 5.2.0
    documentation-url: A utility to compare metric value between two input images.
    license: https://www.nitrc.org/svn/brains/BuildScripts/trunk/License.txt
    contributor: Ali Ghayoor
    """

    input_fields = [
        (
            "inputBSplineTransform",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputBSplineTransform %s",
                    "help_string": ",         Input transform that is use to warp moving image before metric comparison.,       ",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputFixedImage",
            attr.ib(
                type=File, metadata={"argstr": "--inputFixedImage %s", "exists": "True"}
            ),
        ),
        (
            "inputMovingImage",
            attr.ib(
                type=File,
                metadata={"argstr": "--inputMovingImage %s", "exists": "True"},
            ),
        ),
        (
            "metricType",
            attr.ib(
                type=traits.Enum,
                metadata={
                    "argstr": "--metricType %s",
                    "help_string": "Comparison metric type",
                },
            ),
        ),
        (
            "numberOfSamples",
            attr.ib(
                type=traits.Int,
                metadata={
                    "argstr": "--numberOfSamples %d",
                    "help_string": "The number of voxels sampled for metric evaluation.",
                },
            ),
        ),
        (
            "numberOfHistogramBins",
            attr.ib(
                type=traits.Int,
                metadata={
                    "argstr": "--numberOfHistogramBins %d",
                    "help_string": "The number of historgram bins when MMI (Mattes) is metric type.",
                },
            ),
        ),
    ]
    output_fields = []

    input_spec = SpecInfo(name="Input", fields=input_fields, bases=(ShellSpec,))
    output_spec = SpecInfo(name="Output", fields=output_fields, bases=(ShellSpec,))

    task = ShellCommandTask(
        name="PerformMetricTest",
        executable=" PerformMetricTest ",
        input_spec=input_spec,
        output_spec=output_spec,
    )
