"""
Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator.
"""

import attr
from nipype.interfaces.base import (
    Directory,
    File,
    InputMultiPath,
    OutputMultiPath,
    traits,
)
from pydra import ShellCommandTask
from pydra.engine.specs import SpecInfo, ShellSpec


class BRAINSPosteriorToContinuousClass:
    """
    title: Tissue Classification
    category: BRAINS.Classify
    description: This program will generate an 8-bit continuous tissue classified image based on BRAINSABC posterior images.
    version: 5.2.0
    documentation-url: http://www.nitrc.org/plugins/mwiki/index.php/brains:BRAINSClassify
    license: https://www.nitrc.org/svn/brains/BuildScripts/trunk/License.txt
    contributor: Vincent A. Magnotta
    acknowledgements: Funding for this work was provided by NIH/NINDS award NS050568
    """

    input_fields = [
        (
            "inputWhiteVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputWhiteVolume %s",
                    "help_string": "White Matter Posterior Volume",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputBasalGmVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputBasalGmVolume %s",
                    "help_string": "Basal Grey Matter Posterior Volume",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputSurfaceGmVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputSurfaceGmVolume %s",
                    "help_string": "Surface Grey Matter Posterior Volume",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputCsfVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputCsfVolume %s",
                    "help_string": "CSF Posterior Volume",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputVbVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputVbVolume %s",
                    "help_string": "Venous Blood Posterior Volume",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputCrblGmVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputCrblGmVolume %s",
                    "help_string": "Cerebellum Grey Matter Posterior Volume",
                    "exists": "True",
                },
            ),
        ),
        (
            "inputCrblWmVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--inputCrblWmVolume %s",
                    "help_string": "Cerebellum White Matter Posterior Volume",
                    "exists": "True",
                },
            ),
        ),
        (
            "outputVolume",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--outputVolume %s",
                    "help_string": "Output Continuous Tissue Classified Image",
                    "hash_files": "False",
                },
            ),
        ),
    ]
    output_fields = [
        (
            "outputVolume",
            attr.ib(
                type=File,
                metadata={
                    "help_string": "Output Continuous Tissue Classified Image",
                    "exists": "True",
                },
            ),
        )
    ]

    input_spec = SpecInfo(name="Input", fields=input_fields, bases=(ShellSpec,))
    output_spec = SpecInfo(name="Output", fields=output_fields, bases=(ShellSpec,))

    task = ShellCommandTask(
        name="BRAINSPosteriorToContinuousClass",
        executable=" BRAINSPosteriorToContinuousClass ",
        input_spec=input_spec,
        output_spec=output_spec,
    )
