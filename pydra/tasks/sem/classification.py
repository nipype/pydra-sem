"""
Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator.
"""

import attr
from nipype.interfaces.base import (
    Directory,
    File,
    InputMultiPath,
    OutputMultiPath,
    traits,
)
from pydra import ShellCommandTask
from pydra.engine.specs import SpecInfo, ShellSpec


class GeneratePurePlugMask:
    """
    title: Pure Plugs Mask
    category: Classification
    description: This program gets several modality image files and returns a binary mask that defines the pure plugs.
    version: 5.2.0
    contributor: Ali Ghayoor
    """

    input_fields = [
        (
            "inputImageModalities",
            attr.ib(
                type=InputMultiPath,
                metadata={
                    "argstr": "--inputImageModalities %s...",
                    "help_string": "Input image files names (.nii.gz or .nrrd)",
                },
            ),
        ),
        (
            "threshold",
            attr.ib(
                type=traits.Float,
                metadata={
                    "argstr": "--threshold %f",
                    "help_string": "threshold value to define class membership.",
                },
            ),
        ),
        (
            "numberOfSubSamples",
            attr.ib(
                type=InputMultiPath,
                metadata={
                    "argstr": "--numberOfSubSamples %s",
                    "help_string": "Number of continous index samples taken at each direction of lattice space for each plug volume.",
                    "sep": ",",
                },
            ),
        ),
        (
            "verbose",
            attr.ib(
                type=traits.Bool,
                metadata={
                    "argstr": "--verbose ",
                    "help_string": "Print out some debugging information.",
                },
            ),
        ),
        (
            "outputMaskFile",
            attr.ib(
                type=File,
                metadata={
                    "argstr": "--outputMaskFile %s",
                    "help_string": "Ouput binary mask that includes the pure plugs (.nrrd)",
                    "hash_files": "False",
                },
            ),
        ),
    ]
    output_fields = [
        (
            "outputMaskFile",
            attr.ib(
                type=File,
                metadata={
                    "help_string": "Ouput binary mask that includes the pure plugs (.nrrd)",
                    "exists": "True",
                },
            ),
        )
    ]

    input_spec = SpecInfo(name="Input", fields=input_fields, bases=(ShellSpec,))
    output_spec = SpecInfo(name="Output", fields=output_fields, bases=(ShellSpec,))

    task = ShellCommandTask(
        name="GeneratePurePlugMask",
        executable=" GeneratePurePlugMask ",
        input_spec=input_spec,
        output_spec=output_spec,
    )
